{% extends 'base.html.twig' %}

{% block body %}

    <div class="container center-align">
        <h4>Recherche par ingr√©dients</h4>

        <div class="input-field col s12 z-depth-1" style=" border-radius: 50px; padding-right: 40px">
            <i class="material-icons prefix">search</i>
            <input type="text" id="search-bar" class="autocomplete" style="margin-bottom: 0">
        </div>


        <div id="tags" style="min-height: 40px">

        </div>



        <div id="recettes" class="row">


        </div>

    </div>

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script>

        $(document).ready(function(){
            var lastAjax = null;
            // init autocomplete
            var elems = document.querySelectorAll('.autocomplete');
            M.Autocomplete.init(
                elems,
                {
                    data: {{ aliments|json_encode|raw }},
                    limit: Infinity,
                    minLength: 1,
                    onAutocomplete: addTag
                }
            );
            var autoComplete = M.Autocomplete.getInstance($('input.autocomplete'));

            // add event for search
            document.getElementById("search-bar").addEventListener('keypress', searchListener);

            function searchListener(event){
                if(event.key === "Enter"){
                    if(autoComplete.dropdown.dropdownEl.firstChild != null) {
                        addTag(autoComplete.dropdown.dropdownEl.firstChild.textContent)
                        $('#search-bar')[0].value = "";
                        autoComplete.close();
                    }
                }
            }

            var tags = [];
            var ntags = [];


            function addTag(tag){
                // reset bar
                $('#search-bar')[0].value = "";

                if(tags.includes(tag)) return;
                if(ntags.includes(tag)) return;

                // create tag DOM elem
                var chip = document.createElement("div");
                chip.appendChild(document.createTextNode(tag));
                chip.className = "chip";

                chip.style.cursor = "pointer";
                chip.style.backgroundColor = "#5da367";
                chip.style.color = "white";

                var icon = document.createElement("i");
                icon.appendChild(document.createTextNode("close"));
                icon.classList.add("close");
                icon.classList.add("material-icons");
                chip.appendChild(icon);

                icon.addEventListener("click", (event) => {
                    removeTag(tag);
                })

                chip.onclick = () => changeTagStatus(tag, chip);

                /*
                    <div class="chip">
                        ${tag}
                        <i class="close material-icons">close</i>
                    </div>
                */

                document.getElementById("tags").appendChild(chip);

                console.log("ADD TAG " + tag)
                tags.push(tag);

                updateRecettes();
            }

            function removeTag(tag){

                console.log("REMOVE " + tag);
                if(tags.includes(tag)) tags.splice(tags.indexOf(tag), 1);
                else if(ntags.includes(tag)) ntags.splice(ntags.indexOf(tag), 1);


                updateRecettes();
            }

            function changeTagStatus(tag, tagDOM){
                if(tags.includes(tag)){
                    tags.splice(tags.indexOf(tag), 1);
                    ntags.push(tag);

                    tagDOM.style.backgroundColor = "#d75151";

                    updateRecettes();
                }
                else if(ntags.includes(tag)){
                    ntags.splice(ntags.indexOf(tag), 1);
                    tags.push(tag);

                    tagDOM.style.backgroundColor = "#5da367";

                    updateRecettes();
                }
            }


            function updateRecettes(){
                if(lastAjax != null) lastAjax.abort();

                document.getElementById("recettes").innerHTML =
                    `
                    <div class="preloader-wrapper active">
                        <div class="spinner-layer spinner-green-only">
                            <div class="circle-clipper left">
                                <div class="circle"></div>
                            </div><div class="gap-patch">
                                <div class="circle"></div>
                            </div><div class="circle-clipper right">
                                <div class="circle"></div>
                            </div>
                        </div>
                    </div>
                    `
                ;

                lastAjax = $.ajax({
                    url: '{{ path('getRecettes') }}',
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        'tags': tags,
                        'nWantedTags' : ntags
                    },

                    success: function (data) {
                        console.log(data.data);
                        document.getElementById("recettes").innerHTML = data.html;
                    }
                })
            }
        });

    </script>



{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>

        .elem{
            display: block;
            width: 100%;
            height: 40px;
            margin-bottom: 5px;
            font-size: 17px;
            color: #0a0a0a;

            border-radius: 5px;
        }

        .elem .valign-wrapper{
            height: 100%;
        }

        .elem:hover{
            background-color: #ebebeb;
            box-shadow: inset 0 2px 2px 0 rgb(0 0 0 / 14%),
            inset 0 3px 1px -2px rgb(0 0 0 / 12%),
            inset 0 1px 5px 0 rgb(0 0 0 / 20%)
        }

        .path-bar{
            width: fit-content;
            height: 40px;

            margin-top: 20px;
            margin-bottom: 20px;
            margin-left: 10px;

            padding-left: 10px;
            padding-right: 15px;

            border-radius: 10px;
        }

        .breadcrumb{
            line-height: 0;
            font-size: 15px;
        }

        .breadcrumb:before{
            vertical-align: middle;
        }

    </style>

{% endblock %}

